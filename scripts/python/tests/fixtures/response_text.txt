
])}while(1);</x>{"success":true,"payload":{"value":{"id":"9e7c2da45602","versionId":"46ade9cad41","creatorId":"a3fdf23a4555","homeCollectionId":"","title":"Web Components with Redux","detectedLanguage":"en","latestVersion":"46ade9cad41","latestPublishedVersion":"46ade9cad41","hasUnpublishedEdits":false,"latestRev":2370,"createdAt":1558555969717,"updatedAt":1558959566432,"acceptedAt":0,"firstPublishedAt":1558911975731,"latestPublishedAt":1558959566238,"vote":false,"experimentalCss":"","displayAuthor":"","content":{"subtitle":"You need use Web Components in the your application? No you don’t need. I’am totally against from the hype. You should use if only you…","bodyModel":{"paragraphs":[{"name":"7854","type":3,"text":"Web Components with Redux","markups":[]},{"name":"0b12","type":1,"text":"You need use Web Components in the your application? No you don’t need. I’am totally against from the hype. You should use if only you need. I see some advantages to use if you really need. For example: componentization and your advantages, very small final bundle size and etc.","markups":[]},{"name":"64c9","type":1,"text":"In the article I talk about a project we(My team) started at globo.com. The project was build Stories like Instagram. We use ZuckJS for a POC(proof of concept) but we need customize a lot this lib. Was very expensive cost to customize, so i start wrote a Vanilla Javascript Lib and after I transform it to Web Components. You can see here the vanilla version — branch master.","markups":[{"type":3,"start":61,"end":70,"href":"https://www.globo.com/","title":"","rel":"noopener","anchorType":0},{"type":3,"start":125,"end":131,"href":"https://github.com/ramon82/zuck.js/","title":"","rel":"noopener","anchorType":0},{"type":3,"start":334,"end":338,"href":"https://github.com/leidsondias/storiesJSOlder","title":"","rel":"noopener","anchorType":0},{"type":1,"start":94,"end":101},{"type":1,"start":107,"end":116}]},{"name":"dfce","type":1,"text":"At first I had some troubles for share data between components. I do not want to use any plugin for help with this problem, I wanted to solve with what Web Components provides me and Vanilla Javascript.","markups":[]},{"name":"e91b","type":1,"text":"If you want to go for Redux topic click here. I tell first what approaches I did use before go to use Redux.","markups":[{"type":3,"start":40,"end":44,"href":"#13e6","title":"","rel":"","anchorType":0}]},{"name":"2142","type":3,"text":"Observing changes to attributes","markups":[]},{"name":"0c36","type":1,"text":"The Web Components has a method called observedAttributes , works this way: every time is your observed attribute change, his call an another method called as attributeChangedCallback . This second method has a three parameters: name, oldValue and newValue.","markups":[{"type":10,"start":39,"end":57},{"type":10,"start":159,"end":183},{"type":3,"start":39,"end":56,"href":"https://developers.google.com/web/fundamentals/web-components/customelements#attrchanges","title":"","rel":"","anchorType":0},{"type":3,"start":159,"end":183,"href":"https://developers.google.com/web/fundamentals/web-components/customelements#attrchanges","title":"","rel":"","anchorType":0},{"type":2,"start":229,"end":244},{"type":2,"start":247,"end":256}]},{"name":"b4b2","type":1,"text":"So, the first approach I did use for pass data to mine elements was set up an attribute and use attributeChangedCallback when have attribute changed for change the visualization:","markups":[{"type":10,"start":96,"end":120}]},{"name":"538a","type":11,"text":"Example 1 — Story and Story Items component — The way what i put data on story-items component is not the better. But how i not have the instance for story-items component i need to do that.","markups":[],"layout":1,"iframe":{"mediaResourceId":"fcce36c707ab7fab29ace83201c3c693","thumbnailUrl":"https://i.embed.ly/1/image?url=https%3A%2F%2Favatars1.githubusercontent.com%2Fu%2F1443102%3Fs%3D400%26v%3D4&key=a19fcc184b9711e1b4764040d3dc5c07"}},{"name":"5409","type":1,"text":"I have an array of object called as slides and on my component stories-story I receive the object for use in another component the story-items. How you see, if my object slides is large my tag from html stay too big and too polluted. So, how you can imagine is not better way for share data between components. In my opinion, works if is for small things, on the documentation you can see an example of use to check if attribute is disabled or not and from according value sets another attributes on component.","markups":[{"type":10,"start":36,"end":42},{"type":10,"start":63,"end":76},{"type":10,"start":131,"end":142},{"type":10,"start":170,"end":176},{"type":3,"start":392,"end":399,"href":"https://developers.google.com/web/fundamentals/web-components/customelements#attrchanges","title":"","rel":"noopener","anchorType":0}]},{"name":"d194","type":3,"text":"Event-drive Architecture","markups":[]},{"name":"ea40","type":1,"text":"In event-driven architecture you send and/or listening events, for example if in Component A i need the data from Component B , my Component A need have two events. One for listening and another for tell Component B to want your data. For Component B is the same, needs event for listening if any component want data and another for send the data:","markups":[{"type":10,"start":81,"end":93},{"type":10,"start":114,"end":125},{"type":10,"start":131,"end":142},{"type":10,"start":204,"end":215},{"type":10,"start":239,"end":250},{"type":1,"start":3,"end":28}]},{"name":"969a","type":11,"text":"Example 2 — This example attached events on document because i don’t have a valid target. But on below code you will see the attachment is on components.","markups":[],"layout":1,"iframe":{"mediaResourceId":"9519c49929190537bd2586c85bdf84f5","thumbnailUrl":"https://i.embed.ly/1/image?url=https%3A%2F%2Favatars1.githubusercontent.com%2Fu%2F1443102%3Fs%3D400%26v%3D4&key=a19fcc184b9711e1b4764040d3dc5c07"}},{"name":"eefe","type":1,"text":"Try paste this in your browser console. You will see the order for execute is: get data (ComponentA), send data(ComponentB) and receive data(ComponentA).","markups":[{"type":2,"start":79,"end":124},{"type":2,"start":128,"end":153}]},{"name":"6d60","type":1,"text":"So my other approach was to use event-driven architecture to work with object and not need to set attributes on elements. Who started migrate to this architecture was my friend Ricardo Lino, he created a wrapper for events dispatch called as EventEmitter .","markups":[{"type":10,"start":242,"end":254},{"type":3,"start":177,"end":189,"anchorType":2,"userId":"e8066e7af3d3"},{"type":1,"start":32,"end":57}]},{"name":"fccb","type":1,"text":"The EventEmitter is our wrapper for events management:","markups":[{"type":10,"start":4,"end":16}]},{"name":"da1c","type":11,"text":"Example 3 — Event Emitter, component to management events","markups":[],"layout":1,"iframe":{"mediaResourceId":"6c230602e897c72653fed6244f2bce23","thumbnailUrl":"https://i.embed.ly/1/image?url=https%3A%2F%2Favatars1.githubusercontent.com%2Fu%2F1443102%3Fs%3D400%26v%3D4&key=a19fcc184b9711e1b4764040d3dc5c07"}},{"name":"ec61","type":1,"text":"The most important methods are: on and dispatch. The first is to listening what you want and the second is to dispatch what event you want.","markups":[{"type":2,"start":32,"end":35},{"type":2,"start":39,"end":49}]},{"name":"7429","type":1,"text":"Below you can see an example for component with listening and dispatch events. Is them same component from the first example (Example 1). The stories-story component but written really like a component and now is reusable.","markups":[{"type":10,"start":142,"end":155}]},{"name":"50bf","type":11,"text":"Example 4 — Story component using our Event Emitter","markups":[],"layout":1,"iframe":{"mediaResourceId":"8deb87880092ad94527e9feee6baa803","thumbnailUrl":"https://i.embed.ly/1/image?url=https%3A%2F%2Favatars1.githubusercontent.com%2Fu%2F1443102%3Fs%3D400%26v%3D4&key=a19fcc184b9711e1b4764040d3dc5c07"}},{"name":"f5e0","type":1,"text":"Wow, now we have a reusable component with your responsibilities and scopes. But our mistake was try to migrate code instead of creating from start but starting with event-driven architecture. We found a lot of bugs, because the Vanilla way was based on find elements from parents or children. Also, I didn’t like needs two methods for get an object. So on our migration process we needed to close the POC and it had a high cost for close because of the bugs . And high cost is not are welcome to a POC. This way we stop the project (you can find here —branch is feature/EventEmitter).","markups":[{"type":3,"start":547,"end":551,"href":"https://github.com/leidsondias/storiesJSOlder","title":"","rel":"noopener","anchorType":0},{"type":1,"start":166,"end":191}]},{"name":"630d","type":1,"text":"I really enjoyed this challenge, write Stories with web components. So, I started again but this time using Redux for help me with events and data.","markups":[{"type":3,"start":108,"end":113,"href":"https://redux.js.org/","title":"","rel":"noopener","anchorType":0}]},{"name":"13e6","type":3,"text":"Using Redux","markups":[]},{"name":"906f","type":1,"text":"Why will use Redux? Using Redux my code became is very simple and very easy to get data an another components. With it my problems for events control is over as like bugs create by we on the migration progress (Vanilla > Web Components) haha.","markups":[{"type":1,"start":13,"end":18},{"type":1,"start":26,"end":31},{"type":1,"start":211,"end":218},{"type":1,"start":221,"end":235}]},{"name":"0e1a","type":1,"text":"See below the same component from Example 1:","markups":[{"type":2,"start":34,"end":43}]},{"name":"4b0c","type":11,"text":"Example 5 — Story Component using Redux","markups":[],"layout":1,"iframe":{"mediaResourceId":"2c2e1b2fe91d10d9fa6a492f34df3e3c","thumbnailUrl":"https://i.embed.ly/1/image?url=https%3A%2F%2Favatars1.githubusercontent.com%2Fu%2F1443102%3Fs%3D400%26v%3D4&key=a19fcc184b9711e1b4764040d3dc5c07"}},{"name":"ecc3","type":1,"text":"Now my Event Emitter have just methods for subscribe, dispatch and getState from Store (You can reading about Store here).","markups":[{"type":3,"start":116,"end":120,"href":"https://redux.js.org/api/store","title":"","rel":"","anchorType":0},{"type":1,"start":81,"end":86},{"type":2,"start":43,"end":52},{"type":2,"start":54,"end":62},{"type":2,"start":67,"end":75}]},{"name":"6789","type":11,"text":"Example 6 — Event Emitter with store","markups":[],"layout":1,"iframe":{"mediaResourceId":"19fe47785e004f938daf6fc3359361d6","thumbnailUrl":"https://i.embed.ly/1/image?url=https%3A%2F%2Favatars1.githubusercontent.com%2Fu%2F1443102%3Fs%3D400%26v%3D4&key=a19fcc184b9711e1b4764040d3dc5c07"}},{"name":"2985","type":1,"text":"Redux have a same idea an event-driven architecture. Dispatch one event and have another event to listening and fired some function.","markups":[{"type":1,"start":0,"end":5},{"type":1,"start":26,"end":51}]},{"name":"fd3b","type":1,"text":"For getting started we need configuration our Store . The store is a place where you have states of components and only change him through actions.","markups":[{"type":10,"start":46,"end":51}]},{"name":"55e5","type":11,"text":"Example 7 — File for Store object","markups":[],"layout":1,"iframe":{"mediaResourceId":"08639eddc96503e4a35d3fb9e2178858","thumbnailUrl":"https://i.embed.ly/1/image?url=https%3A%2F%2Favatars1.githubusercontent.com%2Fu%2F1443102%3Fs%3D400%26v%3D4&key=a19fcc184b9711e1b4764040d3dc5c07"}},{"name":"3bf1","type":1,"text":"Our Reducer(In this example I merge the files but the reducer for Story it’s at another file). The Reducer have responsibility for tell how the application state changes from the according action send to store:","markups":[{"type":10,"start":4,"end":11},{"type":1,"start":99,"end":107}]},{"name":"e4ee","type":11,"text":"Example 8 — Reducer","markups":[],"layout":1,"iframe":{"mediaResourceId":"e3af11e044a9718c9c9dcd01e36d7779","thumbnailUrl":"https://i.embed.ly/1/image?url=https%3A%2F%2Favatars1.githubusercontent.com%2Fu%2F1443102%3Fs%3D400%26v%3D4&key=a19fcc184b9711e1b4764040d3dc5c07"}},{"name":"7afb","type":1,"text":"So when we receive an action to LOAD_STORIES our reducer get the state from reducerStories and change the stories key with what the action send on payload key. For the SET_ACTIVE_STORY action is the same thing only changing the key, instead of stories is activeStory .","markups":[{"type":10,"start":32,"end":44},{"type":10,"start":76,"end":90},{"type":10,"start":106,"end":113},{"type":10,"start":147,"end":154},{"type":10,"start":168,"end":184},{"type":10,"start":244,"end":251},{"type":10,"start":255,"end":266}]},{"name":"4112","type":1,"text":"Below is the same component as Example 1 but with another name. I renamed and make the component more clean and with more clear responsibility:","markups":[{"type":2,"start":31,"end":40}]},{"name":"e3f9","type":11,"text":"Example 9 — Story component but with i rename to Stories","markups":[],"layout":1,"iframe":{"mediaResourceId":"050db475bab334753da3f36c829920ff","thumbnailUrl":"https://i.embed.ly/1/image?url=https%3A%2F%2Favatars1.githubusercontent.com%2Fu%2F1443102%3Fs%3D400%26v%3D4&key=a19fcc184b9711e1b4764040d3dc5c07"}},{"name":"d9cb","type":1,"text":"Now we have new stuffs loadStories and connectedCallback in our code.","markups":[{"type":2,"start":23,"end":57}]},{"name":"515a","type":1,"text":"In the first line we have the loadStories , the function responsibility is load the data and call action for send to store. We receive the data from params, but you can fetch in some API or from another way. The code for loadStories is this:","markups":[{"type":10,"start":30,"end":41},{"type":10,"start":221,"end":232}]},{"name":"7f5c","type":11,"text":"Example 10 — Load Stories action","markups":[],"layout":1,"iframe":{"mediaResourceId":"089a26572d4046437675e4af60e3f88d","thumbnailUrl":"https://i.embed.ly/1/image?url=https%3A%2F%2Favatars1.githubusercontent.com%2Fu%2F1443102%3Fs%3D400%26v%3D4&key=a19fcc184b9711e1b4764040d3dc5c07"}},{"name":"266e","type":1,"text":"You can see what ACTIONS.LOAD_STORIES do on our from Reducer file in the 13º line. Basically, keeps state and change the state from stories key for what we pass from payload.","markups":[{"type":10,"start":17,"end":37},{"type":10,"start":132,"end":139},{"type":10,"start":166,"end":173},{"type":1,"start":53,"end":60},{"type":2,"start":53,"end":60}]},{"name":"40b4","type":1,"text":"I use the connectedCallback method for initialize our component. Why i use the connectedCallback instead of constructor ? Constructor is for you set up your component and initialize your state, but it is called only one time. So, if the data is dynamic it’s never change because your component was be started and will not calls the constructor again. The connectedCallback is called every time the element is inserted into the DOM. The documentation and the good practices recommend you use to fetch resources or rendering your component. You can found the good practices for web components here.","markups":[{"type":10,"start":10,"end":27},{"type":10,"start":79,"end":96},{"type":10,"start":108,"end":119},{"type":10,"start":355,"end":372},{"type":3,"start":591,"end":595,"href":"https://developers.google.com/web/fundamentals/web-components/best-practices","title":"","rel":"","anchorType":0}]},{"name":"e215","type":1,"text":"Ok, I load my data on store now i can works with the data. Our data have an array of object. Each object is a story data. Below you can see an example for values from the stories key:","markups":[]},{"name":"5c7f","type":11,"text":"Example 11 — JSON with stories content","markups":[],"layout":1,"iframe":{"mediaResourceId":"8f1ebf5a1d273b745ed8515757740c0d","thumbnailUrl":"https://i.embed.ly/1/image?url=https%3A%2F%2Favatars1.githubusercontent.com%2Fu%2F1443102%3Fs%3D400%26v%3D4&key=a19fcc184b9711e1b4764040d3dc5c07"}},{"name":"89af","type":1,"text":"The Stories component add the StoriesList. And inside from this component we can get the stories saved on our state and make what we want. (In the our case we use a Component for render each story)","markups":[{"type":10,"start":4,"end":11},{"type":10,"start":30,"end":42},{"type":10,"start":89,"end":96}]},{"name":"b4b8","type":11,"text":"Example 12 — Stories List component, your responsibility is to be a wrapper for the story list","markups":[],"layout":1,"iframe":{"mediaResourceId":"880a8a9c0e79d14be470a44cccc377b0","thumbnailUrl":"https://i.embed.ly/1/image?url=https%3A%2F%2Favatars1.githubusercontent.com%2Fu%2F1443102%3Fs%3D400%26v%3D4&key=a19fcc184b9711e1b4764040d3dc5c07"}},{"name":"5e52","type":1,"text":"Now we can call getState from EventEmitter and get state from any reducer. You can see how get state in the 19º line. In 20º line we iterate the stories and create Story component for each data from stories.","markups":[{"type":10,"start":16,"end":24},{"type":10,"start":30,"end":42},{"type":10,"start":145,"end":152},{"type":10,"start":199,"end":206},{"type":1,"start":164,"end":169}]},{"name":"5ff9","type":1,"text":"Until now, we see how dispatch an event and get state from Redux. Missed anything? Yeah, the subscribe method for listening when the state change and fire any method. For example render every time we receiver a new data.","markups":[{"type":1,"start":22,"end":39},{"type":1,"start":44,"end":53},{"type":1,"start":59,"end":64}]},{"name":"b1c7","type":11,"text":"Example 13 — Modal component, your responsibility is has slides from active story.","markups":[],"layout":1,"iframe":{"mediaResourceId":"b4c89e9a296409586f0e7900dac97d9c","thumbnailUrl":"https://i.embed.ly/1/image?url=https%3A%2F%2Favatars1.githubusercontent.com%2Fu%2F1443102%3Fs%3D400%26v%3D4&key=a19fcc184b9711e1b4764040d3dc5c07"}},{"name":"6092","type":1,"text":"The Modal component listen if have a change for state. If has, the render method is execute. You can see this code on line 12º. In the render method we check if exist any story active. If have active story we create the SlideList component and append on the Modal component.","markups":[{"type":10,"start":4,"end":9},{"type":10,"start":67,"end":73},{"type":10,"start":135,"end":141},{"type":10,"start":220,"end":229},{"type":10,"start":258,"end":263}]},{"name":"0281","type":1,"text":"A bad point this code is you listening all events when state changes, not just when activeStory changes. We need to improve this code for not listening all, you can create an abstract class for control this. For now is not problem for our code but is a thing for change on next steps.","markups":[{"type":10,"start":84,"end":96}]},{"name":"8863","type":1,"text":"A good refactoring is isolate our components, we can use containers pattern.","markups":[{"type":1,"start":57,"end":75}]},{"name":"b8f9","type":1,"text":"But what we gain with this change? We will has a component reusable in any place without need your data provider is to be Redux. Also, this way is more easy to test your component, because you just need pass the fixture to it and test. Without use containers pattern we need use MockStore to test our components.","markups":[{"type":10,"start":122,"end":127},{"type":10,"start":279,"end":288},{"type":1,"start":248,"end":266}]},{"name":"9f8e","type":1,"text":"So an example how to use containers on our example:","markups":[]},{"name":"6354","type":11,"text":"Example 14 — Stories component without Redux","markups":[],"layout":1,"iframe":{"mediaResourceId":"5e3811c04c8a2a32095bfe60193d0029","thumbnailUrl":"https://i.embed.ly/1/image?url=https%3A%2F%2Favatars1.githubusercontent.com%2Fu%2F1443102%3Fs%3D400%26v%3D4&key=a19fcc184b9711e1b4764040d3dc5c07"}},{"name":"9b83","type":1,"text":"So, now our component receive two params: object and the loadStories function. If you don’t now what { stories } do, this is call the destructor you can found detail explanation here, but basically what this do is — extract the stories key from object I received on the params. And loadStories is the same function what we imports on the before examples. But this time we not have a connection with Redux, Actions, Reducers or our Event Emitter. This way, you only have to pass data and the function to test the component. If you want, you can pass an empty function.","markups":[{"type":10,"start":101,"end":112},{"type":3,"start":178,"end":182,"href":"https://gist.github.com/leidsondias/ff40f2bbc505c473e6f56bea070a2864","title":"","rel":"noopener","anchorType":0},{"type":1,"start":399,"end":404},{"type":1,"start":406,"end":424},{"type":1,"start":431,"end":446},{"type":2,"start":42,"end":49},{"type":2,"start":57,"end":69},{"type":2,"start":282,"end":293}]},{"name":"ce7b","type":1,"text":"Our container is this:","markups":[]},{"name":"6149","type":11,"text":"Example 15 — Stories container","markups":[],"layout":1,"iframe":{"mediaResourceId":"8e1930664d2606e43490702f26ae464a","thumbnailUrl":"https://i.embed.ly/1/image?url=https%3A%2F%2Favatars1.githubusercontent.com%2Fu%2F1443102%3Fs%3D400%26v%3D4&key=a19fcc184b9711e1b4764040d3dc5c07"}},{"name":"bc80","type":1,"text":"The container has the loadStories action, responsibility for dispatch event to load data to store.","markups":[{"type":10,"start":22,"end":33}]},{"name":"96c9","type":1,"text":"And now in the main file we call the container instead of component.","markups":[]},{"name":"9bfb","type":11,"text":"Example 16 — main file from project","markups":[],"layout":1,"iframe":{"mediaResourceId":"1a0f4d877ca9fb2260a583b7ac86ab9d","thumbnailUrl":"https://i.embed.ly/1/image?url=https%3A%2F%2Favatars1.githubusercontent.com%2Fu%2F1443102%3Fs%3D400%26v%3D4&key=a19fcc184b9711e1b4764040d3dc5c07"}},{"name":"d306","type":1,"text":"If you want, you can create the container how like class. On my case i don’t guess is necessary, so just the function resolve my problem.","markups":[]},{"name":"c32b","type":1,"text":"You can follow all progress for project here and contributed too. I’am writing slowly because I moved to another country and I have a lot to solve and take care of. But I will finish and hope in a few months.","markups":[{"type":3,"start":40,"end":44,"href":"https://github.com/leidsondias/storiesJS","title":"","rel":"noopener","anchorType":0}]},{"name":"ceb6","type":1,"text":"I hope you have liked it and any suggestions or doubts are welcome. If you want correct my english I will like too hahaha ❤","markups":[]}],"sections":[{"name":"0f41","startIndex":0}]},"postDisplay":{"coverless":true}},"virtuals":{"allowNotes":true,"previewImage":{"imageId":"","filter":"","backgroundSize":"","originalWidth":0,"originalHeight":0,"strategy":"resample","height":0,"width":0},"wordCount":1669,"imageCount":0,"readingTime":6.2981132075471695,"subtitle":"You need use Web Components in the your application? No you don’t need. I’am totally against from the hype. You should use if only you…","userPostRelation":{"userId":"a3fdf23a4555","postId":"9e7c2da45602","readAt":1558959566317,"readLaterAddedAt":0,"votedAt":0,"collaboratorAddedAt":0,"notesAddedAt":0,"subscribedAt":0,"lastReadSectionName":"0f41","lastReadVersionId":"46ade9cad41","lastReadAt":1558959588916,"lastReadParagraphName":"969a","lastReadPercentage":0.25,"viewedAt":1558959572041,"presentedCountInResponseManagement":0,"clapCount":0,"seriesUpdateNotifsOptedInAt":0,"queuedAt":0,"seriesFirstViewedAt":0,"presentedCountInStream":6,"seriesLastViewedAt":0,"audioProgressSec":0},"usersBySocialRecommends":[{"userId":"1538653ea288","name":"Wilson Júnior","username":"wilsonjnior","createdAt":1412547683992,"imageId":"0*eP7SFuqZB54ZSU4l.jpg","backgroundImageId":"","bio":"github.com/wpjunior","twitterScreenName":"","facebookAccountId":"734758483267671","allowNotes":1,"mediumMemberAt":0,"isNsfw":false,"isWriterProgramEnrolled":true,"isQuarantined":false,"type":"User"},{"userId":"8cdce699bd34","name":"Thiago Pedroza","username":"thiagoppo","createdAt":1477704693906,"imageId":"0*DuR2zwbwGEBo0w5q.","backgroundImageId":"","bio":"","twitterScreenName":"thiagoppo","facebookAccountId":"10207432146623632","allowNotes":1,"mediumMemberAt":0,"isNsfw":false,"isWriterProgramEnrolled":true,"isQuarantined":false,"type":"User"},{"userId":"49280e130e36","name":"Edu Luz","username":"oniroide","createdAt":1368732291335,"imageId":"1*B6VT1d-xU3vPPQ1Y_0eDCg.png","backgroundImageId":"","bio":"Endorfina oniróide","twitterScreenName":"luzeduardo","facebookAccountId":"100000739324433","allowNotes":1,"mediumMemberAt":0,"isNsfw":false,"isWriterProgramEnrolled":true,"isQuarantined":false,"type":"User"}],"noIndex":false,"recommends":3,"isBookmarked":false,"tags":[{"slug":"web-components","name":"Web Components","postCount":727,"metadata":{"postCount":727,"coverImage":{"id":"1*K-R_T1ZlAWnNfnoTHE9raw.png","originalWidth":3232,"originalHeight":1464,"isFeatured":true}},"type":"Tag"},{"slug":"javascript","name":"JavaScript","postCount":96421,"metadata":{"postCount":96421,"coverImage":{"id":"1*FLoUovYJlIL6kYn4dk3VrQ.png","originalWidth":1720,"originalHeight":900,"isFeatured":true}},"type":"Tag"},{"slug":"redux","name":"Redux","postCount":4446,"metadata":{"postCount":4446,"coverImage":{"id":"1*QcAh45dlS_pwW6wvoS7JOQ.jpeg","originalWidth":4032,"originalHeight":1960,"isFeatured":true}},"type":"Tag"},{"slug":"event-driven-architecture","name":"Event Driven Architecture","postCount":58,"metadata":{"postCount":58,"coverImage":{"id":"1*wU8cedNkpCww3-STIA3AoA.jpeg","originalWidth":934,"originalHeight":920}},"type":"Tag"}],"socialRecommendsCount":3,"responsesCreatedCount":0,"links":{"entries":[{"url":"https://www.globo.com/","alts":[],"httpStatus":200},{"url":"https://redux.js.org/","alts":[],"httpStatus":200},{"url":"https://github.com/leidsondias/storiesJS","alts":[],"httpStatus":200},{"url":"https://developers.google.com/web/fundamentals/web-components/customelements#attrchanges","alts":[],"httpStatus":200},{"url":"https://github.com/ramon82/zuck.js/","alts":[],"httpStatus":200},{"url":"https://github.com/leidsondias/storiesJSOlder","alts":[],"httpStatus":200},{"url":"https://developers.google.com/web/fundamentals/web-components/best-practices","alts":[],"httpStatus":200},{"url":"https://redux.js.org/api/store","alts":[],"httpStatus":200},{"url":"https://gist.github.com/leidsondias/ff40f2bbc505c473e6f56bea070a2864","alts":[],"httpStatus":200},{"url":"#13e6","alts":[],"httpStatus":0}],"version":"0.3","generatedAt":1558959566431},"isLockedPreviewOnly":false,"metaDescription":"","totalClapCount":3,"sectionCount":1,"readingList":0,"topics":[]},"coverless":true,"slug":"web-components-with-redux","translationSourcePostId":"","translationSourceCreatorId":"","isApprovedTranslation":false,"inResponseToPostId":"","inResponseToRemovedAt":0,"isTitleSynthesized":false,"allowResponses":true,"importedUrl":"","importedPublishedAt":0,"visibility":0,"uniqueSlug":"web-components-with-redux-9e7c2da45602","previewContent":{"bodyModel":{"paragraphs":[{"name":"7854","type":3,"text":"Web Components with Redux","markups":[],"alignment":1},{"name":"0b12","type":1,"text":"You need use Web Components in the your application? No you don’t need. I’am totally against from the hype. You should use if only you need. I see some advantages to use if you really need. For example: componentization and your advantages, very small final bundle size and etc.","markups":[],"alignment":1}],"sections":[{"startIndex":0}]},"isFullContent":false,"subtitle":"You need use Web Components in the your application? No you don’t need. I’am totally against from the hype. You should use if only you…"},"license":0,"inResponseToMediaResourceId":"","canonicalUrl":"https://medium.com/@leidsoncruz/web-components-with-redux-9e7c2da45602","approvedHomeCollectionId":"","newsletterId":"","webCanonicalUrl":"https://medium.com/@leidsoncruz/web-components-with-redux-9e7c2da45602","mediumUrl":"https://medium.com/@leidsoncruz/web-components-with-redux-9e7c2da45602","migrationId":"","notifyFollowers":true,"notifyTwitter":false,"notifyFacebook":false,"responseHiddenOnParentPostAt":0,"isSeries":false,"isSubscriptionLocked":false,"seriesLastAppendedAt":0,"audioVersionDurationSec":0,"sequenceId":"","isNsfw":false,"isEligibleForRevenue":false,"isBlockedFromHightower":false,"deletedAt":0,"lockedPostSource":0,"hightowerMinimumGuaranteeStartsAt":0,"hightowerMinimumGuaranteeEndsAt":0,"featureLockRequestAcceptedAt":0,"mongerRequestType":1,"layerCake":0,"socialTitle":"","socialDek":"","editorialPreviewTitle":"","editorialPreviewDek":"","curationEligibleAt":1558911974516,"type":"Post"},"mentionedUsers":[{"userId":"e8066e7af3d3","name":"Ricardo Lino","username":"ricardo.linorj","createdAt":1445543879591,"imageId":"1*Eo7mslSEGsgl4yQl56q2nQ.jpeg","backgroundImageId":"","bio":"Desenvolvedor. Chefe de cozinha em casa. Amante de tecnologia e pessoas - não necessariamente nessa ordem.","twitterScreenName":"","facebookAccountId":"950221708347230","allowNotes":1,"mediumMemberAt":0,"isNsfw":false,"isWriterProgramEnrolled":true,"isQuarantined":false,"type":"User"}],"collaborators":[],"hideMeter":false,"shareKey":"f87d478c0857278f66d2ddbfa7e03aa5","collectionUserRelations":[],"mode":"canEdit","references":{"User":{"a3fdf23a4555":{"userId":"a3fdf23a4555","name":"Leidson Cruz","username":"leidsoncruz","createdAt":1471570936758,"imageId":"0*dZZqw373dUbneTlf.","backgroundImageId":"","bio":"I’am Software Engineer. Currently I live on Lisbon — Portugal","twitterScreenName":"","socialStats":{"userId":"a3fdf23a4555","usersFollowedCount":77,"usersFollowedByCount":43,"type":"SocialStats"},"social":{"userId":"a3fdf23a4555","targetUserId":"a3fdf23a4555","type":"Social"},"facebookAccountId":"1060570384011574","allowNotes":1,"mediumMemberAt":0,"isNsfw":false,"isWriterProgramEnrolled":true,"isQuarantined":false,"type":"User"}},"Social":{"a3fdf23a4555":{"userId":"a3fdf23a4555","targetUserId":"a3fdf23a4555","type":"Social"}},"SocialStats":{"a3fdf23a4555":{"userId":"a3fdf23a4555","usersFollowedCount":77,"usersFollowedByCount":43,"type":"SocialStats"}}}},"v":3,"b":"37640-998bb54"}